{"remainingRequest":"E:\\axmak ui\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!E:\\axmak ui\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\axmak ui\\vue_app_00\\src\\components\\tabbar\\ShopCart.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\axmak ui\\vue_app_00\\src\\components\\tabbar\\ShopCart.vue","mtime":1555894592528},{"path":"E:\\axmak ui\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"E:\\axmak ui\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"E:\\axmak ui\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      isSelect: true,\n      allcb: false\n    };\n  },\n  created: function created() {\n    this.loadMore();\n  },\n  methods: {\n    loadMore: function loadMore() {\n      var _this = this;\n\n      console.log(1234); // 1.创建变量url\n\n      var url = \"http://127.0.0.1:3000/getCart\"; // 2.发送ajax请求\n\n      this.axios.get(url).then(function (res) {\n        if (res.data.code < 1) {\n          _this.$toast(\"请登录\");\n\n          return;\n        } // 2.1:为数组元素添加一个属性 ischecked：表示复选框状态\n        // 2.2：将添加后的结果数组件赋值 list\n\n\n        var rows = res.data.data; // 2.3:创建循环遍历数组并且添加属性\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            item.cb = false;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        console.log(res.data.data);\n        _this.list = rows; // 3.获取服务器返回数据\n        // this.list=res.data.data;\n        // 4.保存list\n        // console.log(this.list)\n      });\n    },\n    removeItem: function removeItem(e) {\n      var _this2 = this;\n\n      // 0:创建一个确认的消息框\n      this.$messagebox.confirm(\"是否删除指定商品?\").then(function (action) {\n        // 功能：删除指定商品\n        // 1.获取商品编号\n        var pid = e.target.dataset.pid;\n        console.log(pid); // 2.创建变量url\n\n        var url = \"http://127.0.0.1:3000/removeCartItem?id=\" + pid; // 3.发送ajax请求\n\n        _this2.axios.get(url).then(function (res) {\n          // 4.获取返回结果\n          console.log(res.data.msg); // 5.判断是否删除成功\n\n          if (res.data.code == 0) {\n            _this2.$toast(\"删除失败\");\n          } else {\n            _this2.$toast(\"删除成功\");\n          } // 6.将当前商品对象删除\n\n\n          _this2.loadMore();\n        });\n      }).catch(function (result) {\n        console.log(\"取消\");\n      });\n    },\n    removeSelect: function removeSelect(e) {\n      var _this3 = this;\n\n      console.log(\"axmak\"); // 1.显示一个确认框\"是否删除选中商品\"\n\n      this.$messagebox.confirm(\"是否删除选中商品\") // 2.如果用户选中 确认\n      .then(function (action) {\n        // 2.1获取用户选中商品\n        // 创建变量保存删除商品的id\n        var ids = \"\"; // 创建循环遍历数组\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _this3.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var item = _step2.value;\n\n            // 如果当前元素cb=true\n            if (item.cb == true) {\n              // 获取当前元素id拼成字符串\n              ids += item.id + \",\";\n            }\n          } // 如果用户没有选中商品，停止删除操作\n\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        if (ids.length == 0) {\n          _this3.$toast(\"请选中需要删除的商品\");\n\n          return;\n        } // 如果用户选择多个商品，去除后面\n\n\n        ids = ids.substring(0, ids.length - 1);\n        console.log(ids); // 2.2创建变量 var ids=\"11,12\"\n        //var ids=\"78\";\n        // 2.3发送ajax请求服务器 /delM\n\n        var url = \"http://127.0.0.1:3000/delM?ids=\" + ids;\n\n        _this3.axios.get(url).then(function (res) {\n          // 2.4接受服务器返回结果\n          // 2.5提示 删除成功 或者 删除失败\n          // if(res.data.code==1){\n          //     this.$toast(\"删除成功\");\n          // }else{\n          //     this.$toast(\"删除失败\")\n          // }\n          console.log(res);\n\n          _this3.$toast(res.data.msg);\n\n          _this3.loadMore();\n        });\n      }).catch(function (result) {\n        // 3.如果用户选中取消\n        console.log(\"取消\");\n      });\n    },\n    selectAll: function selectAll(e) {\n      // 1.获取全选状态\n      var cb = e.target.checked;\n      console.log(cb); // 2.遍历所有商品\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          // 3.将全选状态赋值商品选中状态\n          item.cb = cb;\n        } // 4:修改全选状态\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this.allcb = cb;\n    },\n    singleSelect: function singleSelect(e) {\n      // 功能：如果用户选中商品，将当前商品对应对象\n      // 1.获取当前元素选中状态\n      var cb = e.target.checked; // 2.获取当前元素所对应的商品对象\n      // 2.1:获取当前元素下标\n\n      var i = e.target.dataset.i;\n      console.log(cb);\n      console.log(i); // 2.2:将数组下标对象\n      // 3.修改商品对象cb属性\n\n      this.list[i].cb = cb; // 4.修改全选的状态 true false\n      // 4.1如何完成  累加计算\n      // 4.2创建变量count 保存累加和\n\n      var count = 0; // 4.3创建循环遍历所有元素\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.list[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var item = _step4.value;\n\n          // 4.4获取cb如果值等于true count++\n          if (item.cb == true) {\n            count++;\n          }\n        } // 4.5如果count个数与数组长度一致\n\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      if (count == this.list.length) {\n        // 4.6将全选复选框选中\n        this.allcb = true;\n      } else {\n        // 4.7否则清空全选复选框\n        this.allcb = false;\n      }\n    }\n  }\n};",{"version":3,"sources":["ShopCart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"mui-card\">\r\n\t\t\t<div class=\"mui-card-header\">\r\n                <div>\r\n                    全选 <input type=\"checkbox\" :checked=\"allcb\" @change=\"selectAll\">\r\n                </div>\r\n            </div>\r\n\t\t\t    <div class=\"mui-card-content\">\r\n\t\t\t\t\t<ul class=\"mui-table-view\">\r\n                        <li v-for=\"(item,i) in list\" :key=\"item.id\" class=\"mui-table-view-cell mui-media\">\r\n                            <a href=\"javascript:;\">\r\n                                <img class=\"mui-media-object mui-pull-left\" src=\"img/menu5.png\">\r\n                                <div class=\"mui-media-body\">\r\n                                    <p class='mui-ellipsis'>\r\n                                        <!-- 1.复选框 -->\r\n                                        <input type=\"checkbox\" :checked=\"item.cb\" @change=\"singleSelect\" :data-i=\"i\">\r\n                                        <!-- 2.商品名称 -->\r\n                                        {{item.lname}}\r\n                                        <!-- 3.商品价格 -->\r\n                                        {{item.price}}\r\n                                        <!-- 4.删除按钮 -->\r\n                                        <input type=\"button\" value=\"删除\" @click=\"removeItem\" :data-pid=\"item.id\">\r\n                                    </p>\r\n                                </div>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n\t\t\t    </div>\r\n\t\t\t<div class=\"mui-card-footer\">\r\n                <input type=\"button\" value=\"删除选中的商品\" @click=\"removeSelect\">\r\n            </div>\r\n\t\t</div>   \r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return{\r\n            list:[],\r\n            isSelect:true,\r\n            allcb:false,\r\n        }\r\n    },\r\n    created(){\r\n        this.loadMore();\r\n    },\r\n    methods:{\r\n        loadMore(){\r\n            console.log(1234);\r\n            // 1.创建变量url\r\n            var url=\"http://127.0.0.1:3000/getCart\"\r\n            // 2.发送ajax请求\r\n            this.axios.get(url).then(res=>{\r\n                if(res.data.code<1){\r\n                    this.$toast(\"请登录\");\r\n                    return;\r\n                }\r\n                // 2.1:为数组元素添加一个属性 ischecked：表示复选框状态\r\n                // 2.2：将添加后的结果数组件赋值 list\r\n                var rows =res.data.data;\r\n                // 2.3:创建循环遍历数组并且添加属性\r\n                for(var item of rows){\r\n                    item.cb=false;\r\n                }\r\n                console.log(res.data.data)\r\n                this.list=rows;\r\n            // 3.获取服务器返回数据\r\n                // this.list=res.data.data;\r\n            // 4.保存list\r\n                // console.log(this.list)\r\n            })\r\n        },\r\n        removeItem(e){\r\n            // 0:创建一个确认的消息框\r\n            this.$messagebox.confirm(\"是否删除指定商品?\").then(action=>{\r\n                // 功能：删除指定商品\r\n                // 1.获取商品编号\r\n                var pid=e.target.dataset.pid;\r\n                console.log(pid)\r\n                // 2.创建变量url\r\n                var url=\"http://127.0.0.1:3000/removeCartItem?id=\"+pid;\r\n                // 3.发送ajax请求\r\n                this.axios.get(url).then(res=>{\r\n                // 4.获取返回结果\r\n                    console.log(res.data.msg);\r\n                // 5.判断是否删除成功\r\n                if(res.data.code==0){\r\n                    this.$toast(\"删除失败\");\r\n                }else{\r\n                    this.$toast(\"删除成功\");\r\n                }\r\n                // 6.将当前商品对象删除\r\n                this.loadMore();\r\n                })\r\n            }).catch(result=>{\r\n                console.log(\"取消\")\r\n            })\r\n        },\r\n        removeSelect(e){\r\n            console.log(\"axmak\");\r\n            // 1.显示一个确认框\"是否删除选中商品\"\r\n            this.$messagebox.confirm(\"是否删除选中商品\")\r\n            // 2.如果用户选中 确认\r\n            .then(action=>{\r\n                // 2.1获取用户选中商品\r\n                // 创建变量保存删除商品的id\r\n                var ids=\"\";\r\n                // 创建循环遍历数组\r\n                for(var item of this.list){\r\n                // 如果当前元素cb=true\r\n                    if(item.cb==true){\r\n                // 获取当前元素id拼成字符串\r\n                        ids+=item.id+\",\";\r\n                    }\r\n                }\r\n                // 如果用户没有选中商品，停止删除操作\r\n                if(ids.length==0){\r\n                    this.$toast(\"请选中需要删除的商品\");\r\n                    return;\r\n                }\r\n                // 如果用户选择多个商品，去除后面\r\n                ids=ids.substring(0,ids.length-1);\r\n                console.log(ids);\r\n                // 2.2创建变量 var ids=\"11,12\"\r\n                //var ids=\"78\";\r\n                // 2.3发送ajax请求服务器 /delM\r\n                var url=\"http://127.0.0.1:3000/delM?ids=\"+ids;\r\n                this.axios.get(url).then(res=>{\r\n                // 2.4接受服务器返回结果\r\n                // 2.5提示 删除成功 或者 删除失败\r\n                    // if(res.data.code==1){\r\n                    //     this.$toast(\"删除成功\");\r\n                    // }else{\r\n                    //     this.$toast(\"删除失败\")\r\n                    // }\r\n                    console.log(res);\r\n                    this.$toast(res.data.msg)\r\n                    this.loadMore();\r\n                })\r\n            })\r\n            .catch(result=>{\r\n            // 3.如果用户选中取消\r\n                console.log(\"取消\")\r\n            })\r\n        },\r\n        selectAll(e){\r\n            // 1.获取全选状态\r\n            var cb=e.target.checked;\r\n            console.log(cb);\r\n            // 2.遍历所有商品\r\n            for(var item of this.list){\r\n                // 3.将全选状态赋值商品选中状态\r\n                item.cb=cb\r\n            }\r\n            // 4:修改全选状态\r\n            this.allcb = cb;\r\n        },\r\n        singleSelect(e){\r\n            // 功能：如果用户选中商品，将当前商品对应对象\r\n            // 1.获取当前元素选中状态\r\n            var cb=e.target.checked;\r\n            // 2.获取当前元素所对应的商品对象\r\n            // 2.1:获取当前元素下标\r\n            var i=e.target.dataset.i;\r\n            console.log(cb);\r\n            console.log(i);\r\n            // 2.2:将数组下标对象\r\n            // 3.修改商品对象cb属性\r\n            this.list[i].cb=cb;\r\n            \r\n\r\n            // 4.修改全选的状态 true false\r\n            // 4.1如何完成  累加计算\r\n            // 4.2创建变量count 保存累加和\r\n            var count=0;\r\n            // 4.3创建循环遍历所有元素\r\n            for(var item of this.list){\r\n            // 4.4获取cb如果值等于true count++\r\n                if(item.cb==true){\r\n                    count++;\r\n                }\r\n            }\r\n            // 4.5如果count个数与数组长度一致\r\n            if(count==this.list.length){\r\n            // 4.6将全选复选框选中\r\n                this.allcb=true;\r\n            }else{// 4.7否则清空全选复选框\r\n                this.allcb=false;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n    \r\n</style>"],"sourceRoot":"src\\components\\tabbar"}]}