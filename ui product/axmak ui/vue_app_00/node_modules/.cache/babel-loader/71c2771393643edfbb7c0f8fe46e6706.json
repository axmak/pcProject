{"remainingRequest":"E:\\axmak项目\\ui product\\axmak ui\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!E:\\axmak项目\\ui product\\axmak ui\\vue_app_00\\src\\main.js","dependencies":[{"path":"E:\\axmak项目\\ui product\\axmak ui\\vue_app_00\\src\\main.js","mtime":1558093209074},{"path":"E:\\axmak项目\\ui product\\axmak ui\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"E:\\axmak项目\\ui product\\axmak ui\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport animate from 'animate.css';\nimport 'mint-ui/lib/style.css';\nVue.use(animate);\nVue.config.productionTip = false; //5: 设置请求的根路径 \n//Vue.http.options.root = \"http://127.0.0.1/vue_ser/\";\n//6:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\n//Vue.http.options.emulateJSON = true;\n// 引入Vuex组件\n\nimport Vuex from \"vuex\"; // 注册Vuex组件\n\nVue.use(Vuex); // 创建store对象\n\nvar store = new Vuex.Store({\n  // 共用数据容器\n  state: {\n    num: 1,\n    ava: \"\",\n    uname: \"\",\n    uid: 0,\n    islogin: false\n  },\n  // 操作共用数据方法\n  mutations: {},\n  // 获取共用数据方法\n  getters: {}\n}); // 将store绑定Vue实例 \n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\n\nimport './lib/mui/css/mui.css'; // 导入 MUI 的样式表，扩展图标样式，购物车图标\n// 还需要加载图标字体文件\n\nimport './lib/mui/css/icons-extra.css'; //按需加载mint-ui组件库的一个组件Header\n//1.按需引入Header,Button,Swipe,SwipeItem\n\nimport { Header, Button, Swipe, SwipeItem, Lazyload } from 'mint-ui';\nimport MintUI from \"mint-ui\";\nVue.use(MintUI); //2.全局注册Header\n//希望Header组件可以像标签一样调用\n//标签:Header.name=\"mt-header\"\n//在项目中任意组件模板都可以直接使用\n// Vue.component(Header.name,Header);\n// Vue.component(Button.name,Button);\n// Vue.component(Swipe.name,Swipe);\n// Vue.component(SwipeItem.name,SwipeItem);\n// Vue.component(Lazyload);\n//引入axios库，main.js\n// 1.引入axios库\n\nimport axios from 'axios'; // 2.配置跨域选项,保存session中的数据\n\naxios.defaults.withCredentials = true; // 3.将axios配置到Vue实例中\n\nVue.prototype.axios = axios; //引入脚\n// 4：创建日期格式的过滤器\n// 4.1：创建过滤器\n\nVue.filter(\"datetimeFilter\", function (val) {\n  // (1)创建新日期对象保存原有日期\n  var now = new Date(val); // (2)创建三个变量保存年月日\n\n  var y = now.getFullYear();\n  var m = now.getMonth() + 1;\n  var d = now.getDate(); // (3)创建三个变量保存时分秒\n\n  var h = now.getHours();\n  var mi = now.getMinutes();\n  var s = now.getSeconds(); // (4)调整月份日期格式\n\n  m < 10 && (m = \"0\" + m);\n  d < 10 && (d = \"0\" + d); // (5)返回拼接字符串\n\n  return \"\".concat(y, \"-\").concat(m, \"-\").concat(d, \" \").concat(h, \":\").concat(mi, \":\").concat(s);\n}); // 4.2： 在组件中使用\n\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  },\n  store: store //将store绑定Vue实例\n\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","animate","use","config","productionTip","Vuex","store","Store","state","num","ava","uname","uid","islogin","mutations","getters","Header","Button","Swipe","SwipeItem","Lazyload","MintUI","axios","defaults","withCredentials","prototype","filter","val","now","Date","y","getFullYear","m","getMonth","d","getDate","h","getHours","mi","getMinutes","s","getSeconds","render","$mount"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,aAApB;AAEA,OAAM,uBAAN;AAEAH,IAAII,GAAJ,CAAQD,OAAR;AAIAH,IAAIK,MAAJ,CAAWC,aAAX,GAA2B,KAA3B,C,CACA;AACA;AACA;AACA;AAGA;;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AACAP,IAAII,GAAJ,CAAQG,IAAR,E,CACA;;AACA,IAAIC,QAAM,IAAID,KAAKE,KAAT,CAAe;AACvB;AACAC,SAAM;AACJC,SAAI,CADA;AAEJC,SAAI,EAFA;AAGJC,WAAM,EAHF;AAIJC,SAAI,CAJA;AAKJC,aAAQ;AALJ,GAFiB;AASvB;AACAC,aAAU,EAVa;AAavB;AACAC,WAAQ;AAde,CAAf,CAAV,C,CAgBA;AAGA;;AACA,OAAO,uBAAP,C,CACA;AACA;;AACA,OAAO,+BAAP,C,CAIA;AACA;;AACA,SAAQC,MAAR,EAAeC,MAAf,EAAsBC,KAAtB,EAA4BC,SAA5B,EAAsCC,QAAtC,QAAqD,SAArD;AAEA,OAAOC,MAAP,MAAmB,SAAnB;AACAvB,IAAII,GAAJ,CAAQmB,MAAR,E,CAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAGA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACAA,MAAMC,QAAN,CAAeC,eAAf,GAA+B,IAA/B,C,CACA;;AACA1B,IAAI2B,SAAJ,CAAcH,KAAd,GAAsBA,KAAtB,C,CAEA;AAGA;AACE;;AACAxB,IAAI4B,MAAJ,CAAW,gBAAX,EAA4B,UAASC,GAAT,EAAa;AACvC;AACA,MAAIC,MAAI,IAAIC,IAAJ,CAASF,GAAT,CAAR,CAFuC,CAGvC;;AACA,MAAIG,IAAEF,IAAIG,WAAJ,EAAN;AACA,MAAIC,IAAEJ,IAAIK,QAAJ,KAAe,CAArB;AACA,MAAIC,IAAEN,IAAIO,OAAJ,EAAN,CANuC,CAOvC;;AACA,MAAIC,IAAER,IAAIS,QAAJ,EAAN;AACA,MAAIC,KAAGV,IAAIW,UAAJ,EAAP;AACA,MAAIC,IAAEZ,IAAIa,UAAJ,EAAN,CAVuC,CAWvC;;AACAT,MAAE,EAAF,KAAOA,IAAE,MAAIA,CAAb;AACAE,MAAE,EAAF,KAAOA,IAAE,MAAIA,CAAb,EAbuC,CAcvC;;AACA,mBAAUJ,CAAV,cAAeE,CAAf,cAAoBE,CAApB,cAAyBE,CAAzB,cAA8BE,EAA9B,cAAoCE,CAApC;AACD,CAhBD,E,CAiBA;;AAEF,IAAI1C,GAAJ,CAAQ;AACNE,gBADM;AAEN0C,UAAQ;AAAA,WAAKN,EAAErC,GAAF,CAAL;AAAA,GAFF;AAGNO,cAHM,CAGY;;AAHZ,CAAR,EAIGqC,MAJH,CAIU,MAJV","sourceRoot":"E:\\axmak项目\\ui product\\axmak ui\\vue_app_00","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport animate from 'animate.css'\r\n\r\nimport'mint-ui/lib/style.css'\r\n\r\nVue.use(animate)\r\n\r\n\r\n\r\nVue.config.productionTip = false\r\n//5: 设置请求的根路径 \r\n//Vue.http.options.root = \"http://127.0.0.1/vue_ser/\";\r\n//6:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\r\n//Vue.http.options.emulateJSON = true;\r\n\r\n\r\n// 引入Vuex组件\r\nimport Vuex from \"vuex\"\r\n// 注册Vuex组件\r\nVue.use(Vuex)\r\n// 创建store对象\r\nvar store=new Vuex.Store({\r\n  // 共用数据容器\r\n  state:{\r\n    num:1,\r\n    ava:\"\",\r\n    uname:\"\",\r\n    uid:0,\r\n    islogin:false\r\n  },\r\n  // 操作共用数据方法\r\n  mutations:{\r\n\r\n  },\r\n  // 获取共用数据方法\r\n  getters:{}\r\n})\r\n// 将store绑定Vue实例 \r\n\r\n\r\n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\r\nimport './lib/mui/css/mui.css'\r\n// 导入 MUI 的样式表，扩展图标样式，购物车图标\r\n// 还需要加载图标字体文件\r\nimport './lib/mui/css/icons-extra.css'\r\n\r\n\r\n\r\n//按需加载mint-ui组件库的一个组件Header\r\n//1.按需引入Header,Button,Swipe,SwipeItem\r\nimport {Header,Button,Swipe,SwipeItem,Lazyload} from 'mint-ui'\r\n\r\nimport MintUI from \"mint-ui\";\r\nVue.use(MintUI);\r\n\r\n//2.全局注册Header\r\n//希望Header组件可以像标签一样调用\r\n//标签:Header.name=\"mt-header\"\r\n//在项目中任意组件模板都可以直接使用\r\n// Vue.component(Header.name,Header);\r\n\r\n// Vue.component(Button.name,Button);\r\n\r\n// Vue.component(Swipe.name,Swipe);\r\n\r\n// Vue.component(SwipeItem.name,SwipeItem);\r\n\r\n// Vue.component(Lazyload);\r\n\r\n\r\n//引入axios库，main.js\r\n// 1.引入axios库\r\nimport axios from 'axios'\r\n// 2.配置跨域选项,保存session中的数据\r\naxios.defaults.withCredentials=true;\r\n// 3.将axios配置到Vue实例中\r\nVue.prototype.axios = axios;\r\n\r\n//引入脚\r\n\r\n\r\n// 4：创建日期格式的过滤器\r\n  // 4.1：创建过滤器\r\n  Vue.filter(\"datetimeFilter\",function(val){\r\n    // (1)创建新日期对象保存原有日期\r\n    var now=new Date(val)\r\n    // (2)创建三个变量保存年月日\r\n    var y=now.getFullYear();\r\n    var m=now.getMonth()+1;\r\n    var d=now.getDate();\r\n    // (3)创建三个变量保存时分秒\r\n    var h=now.getHours();\r\n    var mi=now.getMinutes();\r\n    var s=now.getSeconds();\r\n    // (4)调整月份日期格式\r\n    m<10&&(m=\"0\"+m);\r\n    d<10&&(d=\"0\"+d);\r\n    // (5)返回拼接字符串\r\n    return `${y}-${m}-${d} ${h}:${mi}:${s}`\r\n  })\r\n  // 4.2： 在组件中使用\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App),\r\n  store             //将store绑定Vue实例\r\n}).$mount('#app')\r\n"]}]}